<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top 100 name' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20'>
        <calculation class='tableau' formula='20' />
        <range max='100' min='1' />
      </column>
    </datasource>
    <datasource caption='all_stocks_5yr (All_stocks_5yr)' inline='true' name='federated.1mh0rip05jigh11bz3aee1d22n2v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='All_stocks_5yr' name='excel-direct.15w4ge417yr62w1dzr64o02r06o7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/zFSDA iNeuron/arti PRACTICE/TABLEAU/Projects/ASSIGN - 3/All_stocks_5yr.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.15w4ge417yr62w1dzr64o02r06o7' name='all_stocks_5yr' table='[all_stocks_5yr$]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='6'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='real' name='open' ordinal='1' />
            <column datatype='real' name='high' ordinal='2' />
            <column datatype='real' name='low' ordinal='3' />
            <column datatype='real' name='close' ordinal='4' />
            <column datatype='integer' name='volume' ordinal='5' />
            <column datatype='string' name='Name' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.15w4ge417yr62w1dzr64o02r06o7' name='all_stocks_5yr' table='[all_stocks_5yr$]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='6'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='real' name='open' ordinal='1' />
            <column datatype='real' name='high' ordinal='2' />
            <column datatype='real' name='low' ordinal='3' />
            <column datatype='real' name='close' ordinal='4' />
            <column datatype='integer' name='volume' ordinal='5' />
            <column datatype='string' name='Name' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_stocks_5yr]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10001:no:A1:G10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[all_stocks_5yr]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all!stocks!5yr_7BCAE7021CD6429185886B0A1A3440CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[open]</local-name>
            <parent-name>[all_stocks_5yr]</parent-name>
            <remote-alias>open</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all!stocks!5yr_7BCAE7021CD6429185886B0A1A3440CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high]</local-name>
            <parent-name>[all_stocks_5yr]</parent-name>
            <remote-alias>high</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all!stocks!5yr_7BCAE7021CD6429185886B0A1A3440CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low]</local-name>
            <parent-name>[all_stocks_5yr]</parent-name>
            <remote-alias>low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all!stocks!5yr_7BCAE7021CD6429185886B0A1A3440CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[close]</local-name>
            <parent-name>[all_stocks_5yr]</parent-name>
            <remote-alias>close</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all!stocks!5yr_7BCAE7021CD6429185886B0A1A3440CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[volume]</local-name>
            <parent-name>[all_stocks_5yr]</parent-name>
            <remote-alias>volume</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all!stocks!5yr_7BCAE7021CD6429185886B0A1A3440CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[all_stocks_5yr]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all!stocks!5yr_7BCAE7021CD6429185886B0A1A3440CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='all_stocks_5yr' datatype='table' name='[__tableau_internal_object_id__].[all!stocks!5yr_7BCAE7021CD6429185886B0A1A3440CF]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Close' datatype='real' name='[close]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='High' datatype='real' name='[high]' role='measure' type='quantitative' />
      <column caption='Low' datatype='real' name='[low]' role='measure' type='quantitative' />
      <column caption='Open' datatype='real' name='[open]' role='measure' type='quantitative' />
      <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
      <column-instance column='[high]' derivation='Avg' name='[avg:high:qk]' pivot='key' type='quantitative' />
      <column-instance column='[open]' derivation='Avg' name='[avg:open:qk]' pivot='key' type='quantitative' />
      <column-instance column='[volume]' derivation='Avg' name='[avg:volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[open]' derivation='Sum' name='[sum:open:qk]' pivot='key' type='quantitative' />
      <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (MONTH(Date),DAY(Date))' hidden='true' name='[Action (MONTH(Date),DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:date:ok]' />
          <groupfilter function='level-members' level='[dy:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Name,YEAR(Date))' hidden='true' name='[Action (Name,YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Name]' />
          <groupfilter function='level-members' level='[yr:date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.663793' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.336207' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:open:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:open:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1mh0rip05jigh11bz3aee1d22n2v]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:volume:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ADBE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ALL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;APTV&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BHGE&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CCL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CNC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CXO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DUK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ESS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FITB&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GPC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HOLX&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;INTU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;KIM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LNT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MGM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NAVI&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NWS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PH&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;QCOM&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SCG&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SWK&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TSN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VFC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;WRK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AIG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ANSS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BAC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CAG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CSRA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DISH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;EMN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;GE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HCN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IBM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JEC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LEG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MAT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MRO&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NOV&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PCLN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;PRU&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;ROK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SPG&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TJX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UNM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WDC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;XYL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ABBV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AKAM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;APA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BDX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CBG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CME&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CTSH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DPS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EQR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GLW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HIG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ILMN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;JWN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LLL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MCO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MTB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NTRS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PFE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PWR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RSG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TRIP&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USB&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WLTW&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ZTS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ADS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AMD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AVB&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BLL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;CF&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DFS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DXC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;EVHC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FLS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GS&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;HPQ&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KMX&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LUV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MMC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NEE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OMC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PLD&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;REG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SIG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SYMC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TXT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VNO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WYNN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ADI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ALLE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BIIB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CDNS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CNP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DVA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ETFC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GPN&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;HON&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IP&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KLAC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LOW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MHK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NBL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NWSA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PHM&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;QRVO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SCHW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SWKS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TSS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VIAB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;WU&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ABC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ALB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;APC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BEN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CBOE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CMG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CTXS&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DRE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EQT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;FFIV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HII&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;INCY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;K&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LLY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MDLZ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MTD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NUE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PFG&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RTN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;STT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;TROW&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UTX&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AFL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AMZN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AZO&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CRM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DISCA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;EIX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;F&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FTV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HBI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;HSY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;JBHT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MAR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MPC&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NLSN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PCAR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PPL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SNPS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TGT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ULTA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;WAT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;XRAY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AAL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AIV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ANTM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BAX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CAH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CLX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CSX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DLR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;EMR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FBHS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;GGP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HCP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ICE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JNJ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LEN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MCD&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NRG&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PDCO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PSA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ROP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SPGI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;TMK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UNP&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WEC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;YUM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AES&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AMP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AXP&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BWA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CHRW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COTY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DHR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ED&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;EXPE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FRT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HAS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HSIC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ITW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KSS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MAA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PAYX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PNW&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RHT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SNA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TDG&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UDR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;VTR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;XLNX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ABT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ALGN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;APD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BF.B&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CBS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CMI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CVS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DRI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ES&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FIS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GOOG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;HLT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;INFO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KEY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LMT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MDT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MU&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NVDA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PG&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;PXD&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SBAC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;STX&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TRV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;V&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;WMB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ADSK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AME&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AVGO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BMY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CFG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DG&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;EW&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;FMC&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GT&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HRB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IRM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;KO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LYB&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MMM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NEM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ORCL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;REGN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SJM&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SYY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VRSK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;XEC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AEE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AMG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AVY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BRK.B&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CHD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;COP&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DGX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EBAY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EXC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;FOX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GWW&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HRL&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ISRG&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;KORS&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MNST&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NFLX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ORLY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PNC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RF&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SLB&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;T&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UAA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;VRSN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;XEL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AET&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AMT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AYI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BXP&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CHTR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CPB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DIS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EFX&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EXR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FTI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HBAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;HST&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IVZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KSU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MAC&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MOS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NKE&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PBCT&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PPG&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RJF&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SNI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TEL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UHS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VZ&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;XOM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AGN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;ANDV&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CINF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CSCO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DISCK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;EL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FAST&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HCA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;HUM&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JCI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LB&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MAS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MRK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NOC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PCG&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PRGO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RMD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TIF&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UNH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;WBA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;XRX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ADM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ALXN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ARNC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BK&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CELG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;COF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DAL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DVN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ETN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FLIR&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GPS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HP&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IPG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;KMB&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LRCX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MKC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NCLH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;O&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PKG&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RCL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SEE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SYF&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TWX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VLO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ACN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ALK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;APH&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BHF&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CCI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CMS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CVX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DTE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ESRX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FISV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GOOGL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HOG&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;INTC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KHC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LNC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MET&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MYL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NWL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PGR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PYPL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SBUX&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;STZ&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TSCO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VAR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WMT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AAP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AIZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AON&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BBT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CAT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CMA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CTAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DLTR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;EOG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FCX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;GILD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IDXX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JNPR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MCHP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MSFT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NSC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PEG&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PSX&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ROST&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SRCL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TMO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UPS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WFC&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ZBH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AEP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AMGN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AWK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BSX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CHK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;COST&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DHI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ECL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;EXPD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FOXA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HAL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;HRS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NFX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;OXY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PNR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RHI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SLG&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TAP&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;UAL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VRTX&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;XL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ADP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AMAT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ATVI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BLK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;CERN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;COG&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DWDP&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ETR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FLR&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GRMN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;HPE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IQV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KMI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LUK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MLM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NDAQ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OKE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PKI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RE&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SHW&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SYK&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TXN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VMC&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WYN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AAPL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AJG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AOS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BBY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CB&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CMCSA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CTL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DOV&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;EQIX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FDX&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GIS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HES&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IFF&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;JPM&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;LKQ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MCK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MSI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NTAP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PEP&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PVH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RRC&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SRE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TPR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;URI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WHR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ZION&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_stocks_5yr' id='all!stocks!5yr_7BCAE7021CD6429185886B0A1A3440CF'>
            <properties context=''>
              <relation connection='excel-direct.15w4ge417yr62w1dzr64o02r06o7' name='all_stocks_5yr' table='[all_stocks_5yr$]' type='table'>
                <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='real' name='open' ordinal='1' />
                  <column datatype='real' name='high' ordinal='2' />
                  <column datatype='real' name='low' ordinal='3' />
                  <column datatype='real' name='close' ordinal='4' />
                  <column datatype='integer' name='volume' ordinal='5' />
                  <column datatype='string' name='Name' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1mh0rip05jigh11bz3aee1d22n2v'>
      <datasources>
        <datasource caption='all_stocks_5yr (All_stocks_5yr)' name='federated.1mh0rip05jigh11bz3aee1d22n2v' />
      </datasources>
      <datasource-dependencies datasource='federated.1mh0rip05jigh11bz3aee1d22n2v'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]'>
        <groupfilter function='level-members' level='[yr:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_A5B893F22AF64153B58AEAB4C40B9377]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='STOCK MARKET ANALYSIS DASHBOARD' type='sheet' worksheet='Average Number of Stocks(High vs Volume)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='STOCK MARKET ANALYSIS DASHBOARD' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_B2E4B54E5A424BB896A257557D428C2B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='STOCK MARKET ANALYSIS DASHBOARD' type='sheet' worksheet='Average closed Price last 5 Years' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='STOCK MARKET ANALYSIS DASHBOARD' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average Number of Stocks(High vs Volume)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_stocks_5yr (All_stocks_5yr)' name='federated.1mh0rip05jigh11bz3aee1d22n2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1mh0rip05jigh11bz3aee1d22n2v'>
            <column-instance column='[high]' derivation='Avg' name='[avg:high:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volume]' derivation='Avg' name='[avg:volume:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:qk]' pivot='key' type='quantitative' />
            <column caption='High' datatype='real' name='[high]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[dy:date:qk]' value='10' />
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[dy:date:qk]' value='#000000' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[dy:date:qk]' value='Tableau Bold' />
            <format attr='font-weight' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[dy:date:qk]' value='bold' />
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk]' value='#000000' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk]' value='10' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk]' value='10' />
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk]' value='#000000' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[mn:date:ok]' value='10' />
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[mn:date:ok]' value='#000000' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[mn:date:ok]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk]' palette='red_black_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk]' palette='red_black_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk] + [federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk])</rows>
        <cols>([federated.1mh0rip05jigh11bz3aee1d22n2v].[mn:date:ok] * [federated.1mh0rip05jigh11bz3aee1d22n2v].[dy:date:qk])</cols>
      </table>
      <simple-id uuid='{5D1795FA-B8FA-4A50-969F-BD790F0E698F}' />
    </worksheet>
    <worksheet name='Average closed Price last 5 Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_stocks_5yr (All_stocks_5yr)' name='federated.1mh0rip05jigh11bz3aee1d22n2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1mh0rip05jigh11bz3aee1d22n2v'>
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column-instance column='[close]' derivation='Avg' name='[avg:close:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Close' datatype='real' name='[close]' role='dimension' type='ordinal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[Action (MONTH(Date),DAY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_A5B893F22AF64153B58AEAB4C40B9377]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:date:ok]' />
              <groupfilter function='level-members' level='[dy:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]</column>
            <column>[federated.1mh0rip05jigh11bz3aee1d22n2v].[Action (MONTH(Date),DAY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]' value='78' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]' value='100' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='10' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]' value='#000000' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]' value='10' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]' value='10' />
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]' value='#000000' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:close:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:close:qk]' />
              <text column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:close:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]</rows>
        <cols>[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]</cols>
      </table>
      <simple-id uuid='{60ACFBBA-3BC5-4A34-880C-A5B2D0758A2A}' />
    </worksheet>
    <worksheet name='High vs Low'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_stocks_5yr (All_stocks_5yr)' name='federated.1mh0rip05jigh11bz3aee1d22n2v' />
          </datasources>
          <datasource-dependencies datasource='federated.1mh0rip05jigh11bz3aee1d22n2v'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column caption='High' datatype='real' name='[high]' role='measure' type='quantitative' />
            <column caption='Low' datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[high]' derivation='Sum' name='[sum:high:qk]' pivot='key' type='quantitative' />
            <column-instance column='[low]' derivation='Sum' name='[sum:low:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[Action (MONTH(Date),DAY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_A5B893F22AF64153B58AEAB4C40B9377]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:date:ok]' />
              <groupfilter function='level-members' level='[dy:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]</column>
            <column>[federated.1mh0rip05jigh11bz3aee1d22n2v].[Action (MONTH(Date),DAY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[tmn:date:qk]' value='#000000' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[tmn:date:qk]' value='10' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[tmn:date:qk]' value='Tableau Bold' />
            <format attr='font-weight' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[tmn:date:qk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:low:qk]' value='10' />
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:low:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:low:qk]' value='bold' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:low:qk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk]' value='10' />
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk]' value='#000000' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk]' value='Tableau Bold' />
            <format attr='font-weight' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk]' value='bold' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[tmn:date:qk]' value='10' />
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[tmn:date:qk]' value='#000000' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[tmn:date:qk]' value='Tableau Bold' />
            <format attr='font-weight' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[tmn:date:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk]' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:low:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:low:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:low:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk] + [federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:low:qk])</rows>
        <cols>[federated.1mh0rip05jigh11bz3aee1d22n2v].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{B039D527-A58F-498A-8C56-05C1EA839997}' />
    </worksheet>
    <worksheet name='The volume of Stocks Sold at Different Prize(Top Names)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_stocks_5yr (All_stocks_5yr)' name='federated.1mh0rip05jigh11bz3aee1d22n2v' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top 100 name' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20'>
              <calculation class='tableau' formula='20' />
              <range max='100' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1mh0rip05jigh11bz3aee1d22n2v'>
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Close' datatype='real' name='[close]' role='dimension' type='ordinal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column caption='Open' datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[open]' derivation='Sum' name='[sum:open:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volume]' derivation='Sum' name='[sum:volume:qk]' pivot='key' type='quantitative' />
            <column caption='Volume' datatype='integer' name='[volume]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[Action (MONTH(Date),DAY(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_A5B893F22AF64153B58AEAB4C40B9377]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:date:ok]' />
              <groupfilter function='level-members' level='[dy:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([close])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]</column>
            <column>[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]</column>
            <column>[federated.1mh0rip05jigh11bz3aee1d22n2v].[Action (MONTH(Date),DAY(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:volume:qk]' value='#000000' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:volume:qk]' value='10' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:volume:qk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:open:qk]' value='10' />
            <format attr='font-family' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:open:qk]' value='Tableau Bold' />
            <format attr='color' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:open:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:open:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]' />
              <text column='[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3733149766921997' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='931' />
                <format attr='maxwidth' value='931' />
                <format attr='minheight' value='538' />
                <format attr='maxheight' value='538' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:open:qk]</rows>
        <cols>[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:volume:qk]</cols>
      </table>
      <simple-id uuid='{A557ED7B-EBC0-423F-9D4A-6759C9CA0EEA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='STOCK MARKET ANALYSIS DASHBOARD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#220dff' fontname='Wide Latin' fontsize='22'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='1300' maxwidth='1350' minheight='1300' minwidth='1350' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='all_stocks_5yr (All_stocks_5yr)' name='federated.1mh0rip05jigh11bz3aee1d22n2v' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top 100 name' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='20'>
          <calculation class='tableau' formula='20' />
          <range max='100' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1mh0rip05jigh11bz3aee1d22n2v'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98770' id='22' param='vert' type-v2='layout-flow' w='98814' x='593' y='615'>
            <zone h='3384' id='23' type-v2='title' w='98814' x='593' y='615'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='95386' id='20' type-v2='layout-basic' w='98814' x='593' y='3999' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#d2a4f3b7' />
          </zone-style>
        </zone>
        <zone h='28000' id='7' name='High vs Low' w='49704' x='963' y='4077'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5eddc' />
          </zone-style>
        </zone>
        <zone h='32462' id='10' name='Average Number of Stocks(High vs Volume)' w='98370' x='815' y='33000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5eddc' />
          </zone-style>
        </zone>
        <zone h='3000' id='11' mode='dropdown' name='Average Number of Stocks(High vs Volume)' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]' type-v2='filter' w='11407' x='39185' y='4308' />
        <zone h='31846' id='14' name='Average closed Price last 5 Years' w='98667' x='519' y='66000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5eddc' />
          </zone-style>
        </zone>
        <zone h='3231' id='15' name='Average closed Price last 5 Years' pane-specification-id='0' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:close:qk]' type-v2='color' w='10000' x='88148' y='66000' />
        <zone h='28077' id='16' name='The volume of Stocks Sold at Different Prize(Top Names)' w='47926' x='51259' y='4000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f5eddc' />
          </zone-style>
        </zone>
        <zone h='5692' id='18' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11481' x='87778' y='7231'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#220dff' fontname='Wide Latin' fontsize='22'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98770' id='28' param='vert' type-v2='layout-flow' w='98814' x='593' y='615'>
                <zone h='3384' id='23' type-v2='title' w='98814' x='593' y='615'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28077' id='16' is-fixed='true' name='The volume of Stocks Sold at Different Prize(Top Names)' w='47926' x='51259' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28000' id='7' is-fixed='true' name='High vs Low' w='49704' x='963' y='4077'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone h='5692' id='18' mode='slider' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11481' x='87778' y='7231'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
                <zone h='3000' id='11' mode='dropdown' name='Average Number of Stocks(High vs Volume)' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]' type-v2='filter' w='11407' x='39185' y='4308'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32462' id='10' is-fixed='true' name='Average Number of Stocks(High vs Volume)' w='98370' x='815' y='33000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31846' id='14' is-fixed='true' name='Average closed Price last 5 Years' w='98667' x='519' y='66000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone h='3231' id='15' name='Average closed Price last 5 Years' pane-specification-id='0' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:close:qk]' type-v2='color' w='10000' x='88148' y='66000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#d2a4f3b7' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{34E209DA-486C-40B3-A645-C81F6D86E4AF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='High vs Low'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:low:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[:Measure Names]</field>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]</field>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[sum:high:qk]</field>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9C43661-2FFA-4274-9347-BC87E958EDFD}' />
    </window>
    <window class='worksheet' name='Average Number of Stocks(High vs Volume)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:high:qk]</field>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:volume:qk]</field>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88549AC9-D5D2-45C7-A7D3-8C6D6B7F8F8D}' />
    </window>
    <window class='worksheet' name='Average closed Price last 5 Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:close:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[avg:close:qk]</field>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]</field>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:close:ok]</field>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2C84FA0-A8CC-47C8-A6C9-C105356ADF32}' />
    </window>
    <window class='worksheet' name='The volume of Stocks Sold at Different Prize(Top Names)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1mh0rip05jigh11bz3aee1d22n2v].[none:Name:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[:Measure Names]</field>
            <field>[federated.1mh0rip05jigh11bz3aee1d22n2v].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC336A6B-A60B-41EA-AD84-0548B7603088}' />
    </window>
    <window class='dashboard' maximized='true' name='STOCK MARKET ANALYSIS DASHBOARD'>
      <viewpoints>
        <viewpoint name='Average Number of Stocks(High vs Volume)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average closed Price last 5 Years'>
          <default-map-tool-selection tool='4' />
        </viewpoint>
        <viewpoint name='High vs Low'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='The volume of Stocks Sold at Different Prize(Top Names)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AA6090B6-7A28-45F0-B861-0303B60054B0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Number of Stocks(High vs Volume)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average closed Price last 5 Years' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='High vs Low' width='192'>
      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
      2v8CCHgXSd3ts40AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='STOCK MARKET ANALYSIS DASHBOARD' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The volume of Stocks Sold at Different Prize(Top Names)' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
